let g:deoplete#enable_at_startup      = 1
let g:acp_enableAtStartup             = 0
let g:neocomplcache_enable_at_startup = 0
let g:neocomplete#enable_at_startup   = 0

let g:deoplete#keyword_patterns   = {}
let g:deoplete#keyword_patterns._ = '[a-zA-Z_]\k*\(?'

let g:deoplete#omni#input_patterns        = {}
let g:deoplete#omni#input_patterns.python = ''
let g:deoplete#omni#input_patterns.perl   = '\h\w*-&gt;\h\w*\|\h\w*::'
let g:deoplete#omni#functions             = {}
let g:deoplete#omni#functions.lua         = 'xolox#lua#omnifunc'

let g:deoplete#enable_refresh_always      = 1
let g:deoplete#enable_camel_case          = 1
let g:deoplete#auto_complete_start_length = 2
let g:deoplete#auto_complete_delay        = 50

if dein#is_sourced('neosnippet.vim')
  inoremap <expr><C-n> pumvisible() ? "\<C-n>" :
        \ neosnippet#expandable_or_jumpable() ?
        \    "\<Plug>(neosnippet_expand_or_jump)" : "\<C-p>\<Down>"
else
  inoremap <expr><C-n> pumvisible() ? "\<C-n>" : "\<C-p>\<Down>"
endif
inoremap <expr><C-p> pumvisible() ? "\<C-p>" : "\<C-p>\<C-n>"

let s:is_auto_pairs = dein#is_sourced('auto-pairs')

inoremap <expr><CR> deoplete#smart_close_popup()."\<CR>"

inoremap <silent> <BS> <C-r>=<SID>my_bs_function()<CR>
function! s:my_bs_function() abort
  let s:bs = s:is_auto_pairs ? AutoPairsDelete() : "\<BS>"
  return deoplete#close_popup() . s:bs
endfunction

inoremap <expr><HOME>  deoplete#close_popup() . "\<HOME>"
inoremap <expr><END>   deoplete#close_popup() . "\<END>"
inoremap <expr><Left>  deoplete#close_popup() . "\<Left>"
inoremap <expr><Right> deoplete#close_popup() . "\<Right>"
inoremap <expr><Up>    deoplete#close_popup() . "\<Up>"
inoremap <expr><Down>  deoplete#close_popup() . "\<Down>"
