"---------------------------------------------------------------------
" vim plugins
"---------------------------------------------------------------------
set nocompatible
filetype plugin indent off
if has('vim_starting')
  set runtimepath+=~/.vim/bundle/neobundle.vim
endif
call neobundle#rc(expand('~/.vim/bundle/'))

let g:neobundle#types#git#default_protocol = 'https'

NeoBundleFetch 'Shougo/neobundle.vim'

" Unite {{{

  " unite
  NeoBundleLazy 'Shougo/unite.vim', {
        \ 'autoload' : {
        \   'commands' : [
        \     'Unite', 'UniteWithCurrentDir',
        \     'UniteWithBufferDir', 'UniteBookmarkAdd',
        \     'UniteWithCursorWord'],
        \ }}

  " outline
  NeoBundleLazy 'Shougo/unite-outline', {
        \ 'depends' : 'Shougo/unite.vim',
        \ 'autoload' : {
        \   'unite_sources' : 'outline',
        \ }}

  " rails
  NeoBundleLazy 'basyura/unite-rails', {
        \ 'depends' : 'Shougo/unite.vim',
        \ 'autoload' : {
        \   'unite_sources' : [
        \     'rails/bundle', 'rails/bundled_gem', 'rails/config',
        \     'rails/controller', 'rails/db', 'rails/destroy',
        \     'rails/features', 'rails/gem', 'rails/gemfile',
        \     'rails/generate', 'rails/git', 'rails/helper',
        \     'rails/heroku', 'rails/initializer', 'rails/javascript',
        \     'rails/lib', 'rails/log', 'rails/mailer',
        \     'rails/model', 'rails/rake', 'rails/route',
        \     'rails/schema', 'rails/spec', 'rails/stylesheet',
        \     'rails/view']
        \ }}

  " tag
  NeoBundleLazy 'tsukkee/unite-tag', {
        \ 'depends' : 'Shougo/unite.vim',
        \ 'autoload' : {
        \   'unite_sources' : 'tag',
        \   'commands' : 'UniteWithCursorWord',
        \ }}

  " tig
  NeoBundleLazy 'Kocha/vim-unite-tig', {
        \ 'depends' : 'Shougo/unite.vim',
        \ 'build' : {
        \    'mac': 'brew install tig',
        \    'unix': 'sudo apt-get install tig',
        \ },
        \ 'autoload' : {
        \   'unite_sources' : 'tig'
        \ }}

  " git
  NeoBundleLazy 'kmnk/vim-unite-giti', {
        \ 'depends' : 'Shougo/unite.vim',
        \ 'autoload': {
        \   'unite_sources': [
        \     'giti', 'giti/branch', 'giti/branch/new',
        \     'giti/branch_all', 'giti/config', 'giti/log',
        \     'giti/remote', 'giti/status'
        \   ]
        \ }}

  " rake
  " NeoBundleLazy 'ujihisa/unite-rake', {
  "       \ 'depends' : 'Shougo/unite.vim',
  "       \ 'autoload': {
  "       \   'unite_sources': 'rake'
  "       \ }}

  " command, search, yankのhistory
  " NeoBundleLazy 'thinca/vim-unite-history', {
  "       \ 'depends' : 'Shougo/unite.vim',
  "       \ 'autoload' : {
  "       \   'unite_sources' : ['history/command', 'history/search']
  "       \ }}

" }}}

" Edit {{{

  " YankRing.vim : ヤンクの履歴を管理
  NeoBundle 'YankRing.vim'

  "コメント
  NeoBundleLazy 'tomtom/tcomment_vim', {
        \ 'autoload' : {
        \   'commands' : ['TComment',
        \     'TCommentAs', 'TCommentMaybeInline']
        \ }}

  " visually indent guide
  NeoBundleLazy 'nathanaelkane/vim-indent-guides', {
        \ 'autoload' : {
        \   'commands' : ['IndentGuidesEnable',
        \     'IndentGuidesDisable', 'IndentGuidesToggle'],
        \ }}

  " XMLとかHTMLとかの編集機能を強化する
  NeoBundleLazy 'xmledit', {
        \ 'autoload' : {
        \   'filetypes' : ['xml', 'html', 'ant'],
        \ }}

  " フィルタリングと整形
  NeoBundleLazy 'godlygeek/tabular', {
        \ 'autoload' : { 'commands' : 'Tab' }}

  " undo履歴を追える (need python support)
  NeoBundleLazy 'Gundo', {
        \ 'autoload' : { 'commands' : 'GundoToggle' }}

  " surround.vim : テキストを括弧で囲む／削除する
  NeoBundleLazy 'tpope/vim-surround', {
        \ 'autoload' : {
        \   'mappings' : [
        \     ['nx', '<Plug>Dsurround'], ['nx', '<Plug>Csurround' ],
        \     ['nx', '<Plug>Ysurround' ], ['nx', '<Plug>YSurround' ],
        \     ['nx', '<Plug>Yssurround'], ['nx', '<Plug>YSsurround'],
        \     ['nx', '<Plug>YSsurround'], ['nx', '<Plug>VgSurround'],
        \     ['nx', '<Plug>VSurround']]
        \ }}

  " <C-a>でtrue/false切替。他色々
  NeoBundleLazy 'taku-o/vim-toggle', {
        \ 'autoload' : { 'mappings' : [['n', '<Plug>ToggleN']] }}

  " IME制御
  NeoBundleLazy 'bouzuya/vim-ibus', {
        \ 'autoload' : { 'insert' : 1 }}

  " 無駄に音を出す
  NeoBundleLazy 'calorie/vim-typing-sound', {
        \ 'autoload' : { 'commands' : 'TypingSound' }}

  " visual substitute
  NeoBundleLazy 'osyo-manga/vim-over', {
        \ 'autoload' : { 'commands' : 'OverCommandLine' }}

  " completion for parenthesis
  NeoBundle 'jiangmiao/auto-pairs', {
        \ 'autoload' : { 'insert' : 1 }}

  " textobj {{{

    " textobj-user : 簡単にVimエディタのテキストオブジェクトをつくれる
    NeoBundleLazy 'textobj-user'

    " vim-textobj-entire : buffer全体をtext-objectに
    NeoBundleLazy 'textobj-entire', {
        \ 'depends' : 'textobj-user',
        \ 'autoload' : {
        \   'mappings' : [['nx', '<Plug>(textobj-entire-a)'],
        \     ['nx', '<Plug>(textobj-entire-i)']]
        \ }}

    " vim-textobj-function : 関数の中身をtext-objectに
    NeoBundleLazy 'kana/vim-textobj-function.git', {
        \ 'depends' : 'textobj-user',
        \ 'autoload' : {
        \   'mappings' : [['nx', '<Plug>(textobj-function-a)'],
        \     ['nx', '<Plug>(textobj-function-i)']]
        \ }}

    " vim-textobj-indent : インデントされたものをtext-objectに
    NeoBundleLazy 'kana/vim-textobj-indent.git', {
        \ 'depends' : 'textobj-user',
        \ 'autoload' : {
        \   'mappings' : [
        \     ['nx', '<Plug>(textobj-indent-a)'],
        \     ['nx', '<Plug>(textobj-indent-i)'],
        \     ['nx', '<Plug>(textobj-indent-same-a)'],
        \     ['nx', '<Plug>(textobj-indent-same-i)']]
        \ }}

    " vim-textobj-fold : フォールディングされた範囲をtext-objectに
    NeoBundleLazy 'kana/vim-textobj-fold.git', {
          \ 'depends' : 'textobj-user',
          \ 'autoload' : { 'filetypes' : ['vim', 'zsh'] }}

    " vim-textobj-ruby : rubyのブロックをtext-objectに
    NeoBundleLazy 'rhysd/vim-textobj-ruby', {
          \ 'depends' : 'textobj-user',
          \ 'autoload' : { 'filetypes' : ['ruby', 'eruby'] }}

    " vim-textobj-comment : コメントをtext-objectに
    " NeoBundleLazy 'thinca/vim-textobj-comment.git', {
    "     \ 'depends' : 'textobj-user',
    "     \ 'autoload' : {
    "     \   'mappings' : [
    "     \     ['nx', '<Plug>(textobj-comment-a)'],
    "     \     ['nx', '<Plug>(textobj-comment-i)']]
    "     \ }}

    " vim-textobj-function-javascript : 関数の中身をtext-objectに
    " NeoBundleLazy 'thinca/vim-textobj-function-javascript.git', {
    "       \ 'depends' : 'textobj-user',
    "       \ 'autoload': { 'filetypes': ['javascript'] }}

    " vim-textobj-function-perl : 関数の中身をtext-objectに
    " NeoBundleLazy 'thinca/vim-textobj-function-perl.git', {
    "       \ 'autoload': { 'filetypes': ['perl'] }}

  " }}}

  " vim-operator-user : 簡単にoperatorを定義できるようにする
  " NeoBundleLazy 'operator-user'

  " operator-camelize : camel-caseへの変換
  " NeoBundleLazy 'operator-camelize', {
  "       \ 'depends' : 'operator-user',
  "       \ 'autoload' : {
  "       \   'mappings' : [['nx', '<Plug>(operator-camelize)'],
  "       \     ['nx', '<Plug>(operator-decamelize)']]
  "       \ }}

  " operator-replace : yankしたものでreplaceする
  " NeoBundleLazy 'operator-replace', {
  "       \ 'depends' : 'operator-user',
  "       \ 'autoload' : {
  "       \   'mappings' : [['nx', '<Plug>(operator-replace)']]
  "       \ }}

  " -- でメソッドチェーン整形
  " NeoBundleLazy 'c9s/cascading.vim', {
  "       \ 'autoload' : { 'commands' : 'Cascading' }}

  " smartchr.vim : ==などの前後を整形
  " NeoBundleLazy 'kana/vim-smartchr', {
  "       \ 'autoload' : { 'insert' : 1 }}

  " smartinput.vim : ==などの前後を整形
  " NeoBundleLazy 'kana/vim-smartinput', {
  "       \ 'autoload' : { 'insert' : 1 }}

" }}}

" Completion {{{

  " 補完
  if has('lua')
    NeoBundleLazy 'Shougo/neocomplete.vim', {
          \ 'autoload' : { 'insert' : 1 }}
  else
    NeoBundleLazy 'Shougo/neocomplcache', {
          \ 'autoload' : { 'insert' : 1 }}
  endif

  " neocomplcacheのsinpet補完
  NeoBundleLazy 'Shougo/neosnippet', {
        \ 'autoload' : {
        \   'commands' : ['NeoSnippetEdit'],
        \   'filetypes' : 'snippet',
        \   'insert' : 1,
        \   'unite_sources' : ['snippet', 'neosnippet/user',
        \     'neosnippet/runtime'],
        \ }}

  " neocomplcacheのrsense
  " NeoBundleLazy 'Shougo/neocomplcache-rsense', {
  "       \ 'depends': 'Shougo/neocomplcache',
  "       \ 'autoload': { 'filetypes': 'ruby' }}

  " rsense本体
  " NeoBundleFetch 'taichouchou2/rsense-0.3', {
  "       \ 'build' : {
  "       \    'mac': 'ruby etc/config.rb > ~/.rsense',
  "       \    'unix': 'ruby etc/config.rb > ~/.rsense',
  "       \ } }

" }}}

" Searching/Moving {{{

  " <Leader>w/fなどで、motion先をhilightする
  NeoBundle 'EasyMotion'

  " vim-smartword : 単語移動がスマートな感じで
  NeoBundleLazy 'smartword', {
        \ 'autoload' : {
        \   'mappings' : [
        \     '<Plug>(smartword-w)', '<Plug>(smartword-b)',
        \     '<Plug>(smartword-e)', '<Plug>(smartword-ge)']
        \ }}

  " camelcasemotion : CamelCaseやsnake_case単位でのワード移動
  NeoBundleLazy 'camelcasemotion', {
        \ 'autoload' : {
        \   'mappings' : [
        \     '<Plug>CamelCaseMotion_w', '<Plug>CamelCaseMotion_b',
        \     '<Plug>CamelCaseMotion_e', '<Plug>CamelCaseMotion_iw',
        \     '<Plug>CamelCaseMotion_ib', '<Plug>CamelCaseMotion_ie'],
        \ }}

  " matchit.vim : 「%」による対応括弧へのカーソル移動機能を拡張
  NeoBundleLazy 'edsono/vim-matchit', { 'autoload' : {
        \ 'mappings' : ['nx', '%'] }}

  " ruby用のmatchit拡張
  NeoBundleLazy 'ruby-matchit', { 'autoload' : {
        \ 'filetypes' : ['ruby', 'eruby'] }}

  " open-browser.vim : カーソルの下のURLを開く
  NeoBundleLazy 'tyru/open-browser.vim', {
        \ 'autoload' : {
        \   'mappings' : [['nx', '<Plug>(openbrowser-open)']],
        \   'commands' : 'OpenBrowserSearch',
        \ }}

  " ブラウザリロード
  NeoBundleLazy 'lordm/vim-browser-reload-linux', {
        \ 'autoload' : {
        \   'build' : { 'unix' : ['sudo apt-get install xdotool'] },
        \   'commands' : ['ChromeReload', 'ChromeReloadStart'],
        \ }}

  " visual modeでテキスト移動
  NeoBundleLazy 't9md/vim-textmanip', { 'autoload' : {
        \ 'mappings' : [
        \   ['x', '<Plug>(textmanip-move-down)'],
        \   ['x', '<Plug>(textmanip-move-up)'],
        \   ['x', '<Plug>(textmanip-move-left)' ],
        \   ['x', '<Plug>(textmanip-move-right)']],
        \ }}

  " fで連続移動
  NeoBundleLazy 'rhysd/clever-f.vim', { 'autoload' : {
        \ 'mappings' : [
        \   '<Plug>(clever-f-f)', '<Plug>(clever-f-F)'],
        \ }}

  " window swap
  NeoBundleLazy 'calorie/vim-swap-windows', { 'autoload' : {
        \ 'commands' : [
        \   'MarkWindow', 'SwapWindows'],
        \ }}

" }}}

" Programming {{{

  " tagsの自動生成
  NeoBundle 'szw/vim-tags', {
        \ 'build': {
        \   'unix': 'sudo apt-get install exuberant-ctags'
        \ }}

  " quickrun.vim : 編集中のファイルを簡単に実行できるプラグイン
  NeoBundleLazy 'thinca/vim-quickrun', {
        \ 'autoload' : {
        \   'mappings' : [['nxo', '<Plug>(quickrun)']],
        \   'commands' : 'QuickRun',
        \ }}

  " perldocやphpmanual等のリファレンスをvim上で見る
  NeoBundleLazy 'thinca/vim-ref', {
        \ 'autoload' : { 'commands' : 'Ref' }}

  " vim上でriの表示
  NeoBundleLazy 'taka84u9/vim-ref-ri', {
        \ 'depends': ['Shougo/unite.vim', 'thinca/vim-ref'],
        \ 'autoload': { 'commands': 'Ref' }}

  " vim-ruby : VimでRubyを扱う際の最も基本的な拡張機能
  NeoBundleLazy 'vim-ruby/vim-ruby', {
        \ 'autoload' : { 'filetypes': ['ruby', 'eruby'] }}

  " rails.vim : railsの基本的な拡張機能
  NeoBundle 'tpope/vim-rails', {
        \ 'autoload' : { 'filetypes': ['ruby', 'eruby'] }}

  " vim-rspec : rspecの実行
  NeoBundleLazy 'skwp/vim-rspec', {
        \ 'build': {
        \   'mac': 'gem install hpricot',
        \   'unix': 'gem install hpricot'
        \ },
        \ 'autoload': { 'filetypes': ['ruby', 'eruby']}}

  " vim-endwise : endなどの補完
  NeoBundle 'tpope/vim-endwise.git', {
        \ 'autoload' : { 'insert' : 1 }}

  " html emmet-vim
  NeoBundleLazy 'mattn/emmet-vim', {
        \ 'autoload': {
        \   'filetypes': ['html', 'eruby', 'php',
        \     'haml', 'css', 'scss', 'sass'],
        \ }}

  " ソースコード上のメソッド宣言、変数宣言の一覧を表示
  NeoBundleLazy 'majutsushi/tagbar', {
        \ 'autoload' : {
        \   'commands': ['TagbarToggle', 'TagbarTogglePause',
        \     'TagbarOpen'],
        \   'fuctions': ['tagbar#currenttag'] }}

  " tagsの自動生成
  " NeoBundleLazy 'alpaca-tc/alpaca_tags', {
  "     \ 'rev' : 'development',
  "     \ 'depends': ['Shougo/vimproc', 'Shougo/unite.vim'],
  "     \ 'autoload' : {
  "     \   'commands' : ['Tags', 'TagsUpdate',
  "     \     'TagsSet', 'TagsBundle', 'TagsCleanCache'],
  "     \   'unite_sources' : ['tags']
  "     \ }}

" }}}

" Syntax {{{

  " syntax checking plugins exist for
  " eruby, haml, html, javascript, php, python, ruby and sass.
  NeoBundleLazy 'scrooloose/syntastic', {
        \ 'autoload': { 'insert' : 1 }}

  " JavaScript
  NeoBundleLazy 'JavaScript-syntax', {
        \ 'autoload': { 'filetypes': 'javascript' }}

  " jQuery
  NeoBundleLazy 'jQuery', {
        \ 'autoload': { 'filetypes': ['javascript', 'coffee'] }}

  " markdown
  NeoBundleLazy 'tpope/vim-markdown', {
        \ 'autoload' : { 'filetypes' : 'markdown' }}

  " coffee script
  NeoBundleLazy 'kchmck/vim-coffee-script', {
        \ 'autoload': { 'filetypes': 'coffee' }}

  " puppet
  NeoBundleLazy 'rodjek/vim-puppet', {
        \ 'autoload': { 'filetypes': 'puppet' }}

  " haml
  " NeoBundleLazy 'haml.zip', {
  "       \ 'autoload': { 'filetypes': ['haml'] }}

  " python
  " NeoBundleLazy 'yuroyoro/vim-python', {
  "       \ 'autoload': { 'filetypes': ['python'] }}

  " nginx conf
  " NeoBundleLazy 'nginx.vim', {
  "       \ 'autoload' : { 'filetype': ['nginx'] }}

  " scala
  " NeoBundleLazy 'yuroyoro/vim-scala', {
  "       \ 'autoload': { 'filetypes': ['scala'] }}

" }}}

" Buffer {{{

  " NERDTree : ツリー型エクスプローラ
  NeoBundle 'The-NERD-tree', {
        \ 'autoload' : {
        \   'commands' : ['NERDTreeToggle','NERDTreeFind','NERDTree']
        \ }}

  " filer
  NeoBundleLazy 'Shougo/vimfiler', {
        \ 'build' : {
        \   'mac' : 'brew install rmtrash',
        \   'unix' : 'sudo apt-get install trash-cli',
        \ },
        \ 'depends' : 'Shougo/unite.vim',
        \ 'autoload' : {
        \   'commands' : ['VimFiler', 'VimFilerExplorer'],
        \   'explorer' : 1,
        \ }}

  NeoBundle 'vim-scripts/vim-auto-save'

  " ctrl+pでファイル検索
  " NeoBundleLazy 'ctrlp.vim', {
  "       \ 'autoload' : { 'commands' : ['CtrlP'] }}

" }}}

" Encording {{{

  NeoBundle 'banyan/recognize_charcode.vim'

" }}}

" Utility {{{

  " vimproc : vimから非同期実行。vimshelleで必要
  NeoBundle 'Shougo/vimproc', {
        \ 'build' : {
        \   'mac'    : 'make -f make_mac.mak',
        \   'unix'   : 'make -f make_unix.mak',
        \   'cygwin' : 'make -f make_cygwin.mak',
        \ }}

  " ステータスラインをカッコよくする
  NeoBundle 'bling/vim-airline'

  " vim-dispatch : vimから非同期実行。
  NeoBundleLazy 'tpope/vim-dispatch', {
        \ 'autoload': { 'commands': ['Dispatch', 'Make', 'Start'] }
        \ }

  " sudo vim
  NeoBundleLazy 'vim-scripts/sudo.vim', {
        \ 'autoload': { 'commands': ['SudoRead', 'SudoWrite'] }
        \ }

  " vimshell : vim上にshellを開く
  NeoBundleLazy 'Shougo/vimshell', {
        \   'autoload' : { 'commands' : [ 'VimShell', 'VimShellSendString' ] }
        \}

  " vimからGit操作する
  NeoBundle 'tpope/vim-fugitive', {
        \ 'autoload' : {
        \   'commands': [
        \     'Git', 'Gstatus', 'Gwrite', 'Glog',
        \     'Gcommit', 'Gblame', 'Ggrep', 'Gdiff'],
        \ }}

  " vimからgitk
  NeoBundleLazy 'gregsexton/gitv', {
        \ 'depends': 'tpope/vim-fugitive',
        \ 'autoload' : { 'commands': ['Gitv'] }}

  " vim上でgit diff表示
  NeoBundleLazy 'airblade/vim-gitgutter', {
        \ 'autoload' : {
        \   'commands': ['GitGutterToggle',
        \               'GitGutterNextHunk',
        \               'GitGutterPrevHunk'],
        \ }}

  " vim Interface to Web API
  NeoBundleLazy 'mattn/webapi-vim'

  " Gist
  NeoBundleLazy 'mattn/gist-vim', {
        \ 'depends': 'mattn/webapi-vim',
        \ 'autoload' : {
        \   'commands' : 'Gist' }}

  NeoBundle 'mhinz/vim-startify'

  " Vim上でSQL実行
  " NeoBundleLazy 'dbext.vim', {
  "       \ 'autoload' : {
  "       \   'commands': [
  "       \     'Alter', 'Call', 'Create', 'DBCheckModeline', 'DBCommit',
  "       \     'DBCompleteProcedure', 'DBCompleteTable', 'DBCompleteView',
  "       \     'DBDescribeProcedure', 'DBDescribeProcedureAskName',
  "       \     'DBDescribeTable', 'DBDescribeTableAskName', 'DBExecRangeSQL',
  "       \     'DBExecSQL', 'DBExecSQLTopX', 'DBExecSQLUnderCursor',
  "       \     'DBExecVisualSQL', 'DBGetOption', 'DBHistory', 'DBListColumn',
  "       \     'DBListConnections', 'DBListProcedure', 'DBListTable', 'DBListVar',
  "       \     'DBListView', 'DBOrientation', 'DBPromptForBufferParameters',
  "       \     'DBResultsClose', 'DBResultsOpen', 'DBResultsRefresh',
  "       \     'DBResultsToggleResize', 'DBRollback', 'DBSelectFromTable',
  "       \     'DBSelectFromTableAskName', 'DBSelectFromTableTopX',
  "       \     'DBSelectFromTableWithWhere', 'DBSetOption', 'DBVarRangeAssign',
  "       \     'Delete', 'Drop', 'Insert', 'Select', 'Update']
  "       \ }}

" }}}

" ColorScheme {{{

  " jellybeans, wombat
  NeoBundle 'calorie/colorschemes'

" }}}

filetype plugin indent on
